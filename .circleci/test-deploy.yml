version: 2.1
orbs:
  # changelog: https://github.com/CircleCI-Public/BATS-orb/releases
  bats: circleci/bats@1.1.0
  # orb info: https://circleci.com/developer/orbs/orb/circleci/orb-tools
  # changelog: https://github.com/CircleCI-Public/orb-tools-orb/releases
  orb-tools: circleci/orb-tools@12.1.0
  rynkowsg-orb: {}

docker_base_small: &docker_base_small
  docker: [{ image: "cimg/base:2023.12" }]
  resource_class: small

# Use this tag to ensure test jobs always run,
# even though the downstream publish job will only run on release tags.
filters: &filters
  tags:
    only: /.*/

# Filter for release tags.
release-filters: &release-filters
  branches:
    ignore: /.*/
  tags:
    only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

jobs:
  # Create jobs to test the commands of your orbs.
  # You may want to add additional validation steps to ensure the commands are working as expected.
  test-greet:
    <<: *docker_base_small
    steps:
      - checkout
      # Run your orb's commands to validate them.
      - rynkowsg-orb/greet

  test_install_asdf:
    <<: *docker_base_small
    parameters:
      # parameters copied from install_asdf
      debug:
        type: boolean
        default: false
        description: "Flag to run the script in debug mode."
      install_dir:
        type: string
        default: ""
        description: "Destination where to install the tool. ASDF_DIR is set to that value. By defaults takes ~/.asdf."
      version:
        type: string
        default: ""
        description:
          Requested version. If not provided it install the latest.
    steps:
      - checkout
      - rynkowsg-orb/install_asdf:
          debug: << parameters.debug >>
          install_dir: << parameters.install_dir >>
          version: << parameters.version >>
      - run:
          name: "test command: asdf"
          command: asdf --version

  test-install-commands:
    <<: *docker_base_small
    steps:
      - checkout
      - bats/install
      # yq
      - rynkowsg-orb/install_yq: {install_dir: ~/bin, version: "4.35.2", debug: true}
      - run:
          name: "test command: install_yq"
          command: VERSION="4.35.2" INSTALL_DIR=~/bin ./test/commands/test_command_install_yq.bats
      # clj-kondo
      - rynkowsg-orb/install_clj_kondo: {install_dir: ~/bin, version: "2024.02.12", debug: true}
      - run:
          name: "test command: install_clj_kondo"
          command: VERSION="2024.02.12" INSTALL_DIR=~/bin ./test/commands/test_command_install_clj_kondo.bats
      # babashka
      - rynkowsg-orb/install_babashka: {install_dir: ~/bin, version: "1.3.188", debug: true}
      - run:
          name: "test command: install_babashka"
          command: VERSION="1.3.188" INSTALL_DIR=~/bin ./test/commands/test_command_install_babashka.bats

workflows:
  test-deploy:
    jobs:
      # Make sure to include "filters: *filters" in every test job you want to run as part of your deployment.
      # Test your orb's commands in a custom job and test your orb's jobs directly as a part of this workflow.
      - test-greet:
          filters: *filters

      - test-install-commands:
          filters: *filters

      - test_install_asdf:
          name: "test_install_asdf|ver=<< matrix.version >>|"
          matrix:
            parameters:
              version: ["", "0.14.0"]
              install_dir: ["", "/tmp/some-tmp-dir"]
          filters: *filters

      # The orb must be re-packed for publishing, and saved to the workspace.
      - orb-tools/pack:
          requires:
            - test-greet
            - test-install-commands
          filters: *filters

      - orb-tools/publish:
          name: publish-dev
          orb_name: rynkowsg/rynkowsg-orb
          vcs_type: << pipeline.project.type >>
          pub_type: dev
          # Ensure this job requires all test jobs and the pack job.
          requires:
            - orb-tools/pack
          context: circleci/orb-publishing-context
          filters: *filters

      - orb-tools/publish:
          name: publish-prod
          orb_name: rynkowsg/rynkowsg-orb
          vcs_type: << pipeline.project.type >>
          pub_type: production
          requires:
            - publish-dev
          context: circleci/orb-publishing-context
          filters: *release-filters
